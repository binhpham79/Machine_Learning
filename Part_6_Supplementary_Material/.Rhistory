default_full <- read.csv("data/default.csv", header=TRUE)
default_full$default <- factor(default_full$default)
summary(default_full$default)
default_rate = nrow(default_full[default_full$default==1,]) / nrow(default_full)
# limit columns
default_full <- default_full[,c(2:8,13,19,20,25)]
default_full <- read.csv("data/default.csv", header=TRUE)
default_full$default <- factor(default_full$default)
summary(default_full$default)
default_rate = nrow(default_full[default_full$default==1,]) / nrow(default_full)
print(paste("default rate = ", default_rate))
# limit columns
default_full <- default_full[,c(2:8,13,19,20,25)]
6636/(6636+23364)
set.seed(1234)
i <- sample(1:nrow(default_full), 0.8*nrow(default_full), replace=FALSE)
train_full <- default_full[i,]
test <- default_full[-i,]
glm1 <- glm(default~., data=train, family=binomial)
glm1 <- glm(default~., data=train_full, family=binomial)
probs <- predict(glm1, newdata=test, type='response')
pred <- ifelse(probs>0.5, 1, 0)
mean(pred==test$default)
set.seed(1234)
j <- sample(1:30000, 1000, replace=FALSE)
df_1000_random <- default_full[j,]
set.seed(1234)
i <- sample(1:1000, 800, replace=FALSE)
train <- df_1000_random[i,]
test <- df_1000_random[-i,]
glm2 <- glm(default~., data=train, family=binomial)
probs <- predict(glm2, newdata=test, type='response')
pred <- ifelse(probs>0.5, 1, 0)
mean(pred==test$default)
library(caret)
k <- createDataPartition(default_full$default, p=0.8, list=FALSE)
head(k)
train_k <- default_full[k,]
test_k <- default_full[-k,]
default_rate_k = nrow(train_k[train_k$default==1,]) / nrow(train_k)
#same
glm3 <- glm(default~., data=train_k, family=binomial)
probs <- predict(glm3, newdata=test_k, type='response')
pred <- ifelse(probs>0.5, 1, 0)
mean(pred==test_k$default)
length(k)
sum(train_k[train_k$default==1])
sum(train_k[train_k$default==1],)
str(train_k$default)
summary(train_k$default)
head(which(train_k$default==1)
)
head(which(train_k$default==0)
)
sum(which(train_k$default==0))
length(train_k)
dim(train_k)
train_0 <- which(train_k$default==0)
lenth(train_0)
length(train_0)
train_0 <- train_k[which(train_k$default==0),]
head(train_0)
dim(train_0)
train_1 <- train_k[which(train_k$default==1,)]
train_1 <- train_k[which(train_k$default==1),]
dim_train_1
dim(train_1)
set.seed(1234)
j <- sample(1:5300, repace=FALSE)
j <- sample(1:5300, 5000, replace=FALSE)
train_bal <- rbind(train_0[j,], train_1[1:5000,])
dim(train_bal)
glm4 <- glm(default~., data=train_bal, family=binomial)
probs <- predict(glm4, newdata=test_k, type='response')
pred <- ifelse(probs>0.5, 1, 0)
mean(pred==test_k$default)
train_bal <- train_bal[sample(nrow(train_bal)),]
glm4 <- glm(default~., data=train_bal, family=binomial)
probs <- predict(glm4, newdata=test_k, type='response')
pred <- ifelse(probs>0.5, 1, 0)
mean(pred==test_k$default)
table(pred, test_k$default)
default_full <- read.csv("data/default.csv", header=TRUE)
default_full$default <- factor(default_full$default)
summary(default_full$default)
default_rate = nrow(default_full[default_full$default==1,]) / nrow(default_full)
print(paste("default rate = ", default_rate))
# limit columns
default_full <- default_full[,c(2:8,13,19,20,25)]
set.seed(1234)
i <- sample(1:nrow(default_full), 0.8*nrow(default_full), replace=FALSE)
train_full <- default_full[i,]
test <- default_full[-i,]
glm1 <- glm(default~., data=train_full, family=binomial)
probs <- predict(glm1, newdata=test, type='response')
pred <- ifelse(probs>0.5, 1, 0)
table(pred, test$default)
mean(pred==test$default)
set.seed(1234)
j <- sample(1:30000, 1000, replace=FALSE)
df_1000_random <- default_full[j,]
set.seed(1234)
i <- sample(1:1000, 800, replace=FALSE)
train <- df_1000_random[i,]
test <- df_1000_random[-i,]
glm2 <- glm(default~., data=train, family=binomial)
probs <- predict(glm2, newdata=test, type='response')
pred <- ifelse(probs>0.5, 1, 0)
table(pred, test$default)
mean(pred==test$default)
library(caret)
k <- createDataPartition(default_full$default, p=0.8, list=FALSE)
train_k <- default_full[k,]
test_k <- default_full[-k,]
default_rate_k = nrow(train_k[train_k$default==1,]) / nrow(train_k)
#same
glm3 <- glm(default~., data=train_k, family=binomial)
probs <- predict(glm3, newdata=test_k, type='response')
pred <- ifelse(probs>0.5, 1, 0)
table(pred, test_k$default)
mean(pred==test_k$default)
train_0 <- train_k[which(train_k$default==0),]
train_1 <- train_k[which(train_k$default==1),]
set.seed(1234)
j <- sample(1:5300, 5000, replace=FALSE)
train_bal <- rbind(train_0[j,], train_1[1:5000,])
glm4 <- glm(default~., data=train_bal, family=binomial)
probs <- predict(glm4, newdata=test_k, type='response')
pred <- ifelse(probs>0.5, 1, 0)
table(pred, test_k$default)
mean(pred==test_k$default)
table("predicted=", pred, test$default)
table("predicted=", pred, "actual=",test$default)
confusionMatrix(pred, test$default)
library(caret)
default_full <- read.csv("data/default.csv", header=TRUE)
default_full$default <- factor(default_full$default)
summary(default_full$default)
default_rate = nrow(default_full[default_full$default==1,]) / nrow(default_full)
print(paste("default rate = ", default_rate))
# limit columns
default_full <- default_full[,c(2:8,13,19,20,25)]
set.seed(1234)
i <- sample(1:nrow(default_full), 0.8*nrow(default_full), replace=FALSE)
train_full <- default_full[i,]
test <- default_full[-i,]
glm1 <- glm(default~., data=train_full, family=binomial)
probs <- predict(glm1, newdata=test, type='response')
pred <- ifelse(probs>0.5, 1, 0)
confusionMatrix(pred, test$default)
mean(pred==test$default)
set.seed(1234)
j <- sample(1:30000, 1000, replace=FALSE)
df_1000_random <- default_full[j,]
set.seed(1234)
i <- sample(1:1000, 800, replace=FALSE)
train <- df_1000_random[i,]
test <- df_1000_random[-i,]
glm2 <- glm(default~., data=train, family=binomial)
probs <- predict(glm2, newdata=test, type='response')
pred <- ifelse(probs>0.5, 1, 0)
confusionMatrix(pred, test$default)
mean(pred==test$default)
k <- createDataPartition(default_full$default, p=0.8, list=FALSE)
train_k <- default_full[k,]
test_k <- default_full[-k,]
default_rate_k = nrow(train_k[train_k$default==1,]) / nrow(train_k)
#same
glm3 <- glm(default~., data=train_k, family=binomial)
probs <- predict(glm3, newdata=test_k, type='response')
pred <- ifelse(probs>0.5, 1, 0)
confusionMatrix(pred, test_k$default)
mean(pred==test_k$default)
train_0 <- train_k[which(train_k$default==0),]
train_1 <- train_k[which(train_k$default==1),]
set.seed(1234)
j <- sample(1:5300, 5000, replace=FALSE)
train_bal <- rbind(train_0[j,], train_1[1:5000,])
glm4 <- glm(default~., data=train_bal, family=binomial)
probs <- predict(glm4, newdata=test_k, type='response')
pred <- ifelse(probs>0.5, 1, 0)
confusionMatrix(pred, test_k$default)
mean(pred==test_k$default)
1206/(1206+784)
121/(121+318)
4483/(4483+121)
318/(318+1078)
39/(39+161)
1078+318
4483+121
1396/4604
1020+307
4518+154
1327/(1327+4672)
1396/(1396+4604)
